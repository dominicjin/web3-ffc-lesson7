{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getFundersToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7f317eaf5852cade525dbd6be4ffb0361dc910cd6104f82f7464b785581c7b5b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1069622",
    "logsBloom": "0x
    "blockHash": "0xb08a9f7a33cfffc00fef5be4fd22212fa767968230b5dbc81fa15ccbd4cda111",
    "transactionHash": "0x7f317eaf5852cade525dbd6be4ffb0361dc910cd6104f82f7464b785581c7b5b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1069622",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "f276c5ad50e98656cc552e1b0b64bcd3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getFundersToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor receive fallback external public internal private view / pure\"},\"fund()\":{\"notice\":\"Fund the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"Fundme\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// praga\\npragma solidity ^0.8.7;\\n\\n// import\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// // custom error\\nerror FundMe_NotOwner();\\n\\n// interfaces, libraries, contracts\\n\\n// @title A contract for crowd funding\\n// @author J\\n// @notice This contract is to demo a sample funding contract\\n// @dev This implements price fees as our library\\ncontract Fundme {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    uint256 public minUSD = 1 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_fundersToAmountFunded;\\n\\n    // immutable and constant\\n    // constant can only be assigned when initializing\\n    // immutable can only be assigned onece\\n    address private immutable i_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    // Modifiers\\n    // _; represents implement the rest code\\n    modifier isOwner() {\\n        // require(i_owner == msg.sender, \\\"Sender is not the owner\\\");\\n        if (i_owner != msg.sender) {\\n            revert FundMe_NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // Functions Orders:\\n    /// constructor\\n    /// receive\\n    /// fallback\\n    /// external\\n    /// public\\n    /// internal\\n    /// private\\n    /// view / pure\\n\\n    //constructer will be called once the contract is on the chain\\n    //it's a good way to pick the owner\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice Fund the contract\\n     * @dev This implements price feeds as our library\\n     */\\n    // msg value is returned in WEI 10**18\\n    function fund() public payable {\\n        // PriceConverter.getConversionRate(msg.value);\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= minUSD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        // if (msg.value.getConversionRate(s_priceFeed) < minUSD) {\\n        //     revert notOwner();\\n        // }\\n\\n        s_funders.push(msg.sender);\\n        s_fundersToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getFundersToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_fundersToAmountFunded[funder];\\n    }\\n\\n    function withdraw() public payable isOwner {\\n        // notice: it is not convenient to check in every function, so we introduce modifier\\n        // require(i_owner == msg.sender, \\\"Sender is not the owner\\\");\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            s_fundersToAmountFunded[s_funders[funderIndex]] = 0;\\n        }\\n\\n        //reset the array, 0 represents 0 element\\n        s_funders = new address[](0);\\n\\n        // only payable address can use transfer\\n        // \\\"this\\\" means the whole contract\\n        // (bool callSuccess, bytes memory data) is the return of call\\n        // how is \\\"call\\\" used call{}()????\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function cheaperWithdraw() public payable isOwner {\\n        address[] memory funders = s_funders;\\n        // mapping can't be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            s_fundersToAmountFunded[funders[funderIndex]] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x8e59556e948ff6a6e585b2e060f786a0a195084c08771850662b8257485c2849\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // Sepolia Testnet\\r\\n        // 0x694AA1769357215DE4FAC081bf1f309aDC325306 ETH/USD\\r\\n\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        // answer * 10 ** 10, according to decimals = 8\\r\\n        return uint256(price * 1e10);\\r\\n        // ETH/USD in WEI\\r\\n    }\\r\\n\\r\\n    // function getVersion() internal view returns (uint256) {\\r\\n    //     return\\r\\n    //         AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306)\\r\\n    //             .version();\\r\\n    // }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethprice = getPrice(priceFeed);\\r\\n        // ethprice and ethAmound have 18decimals, so we need to divide one\\r\\n        uint256 ethAmountInUsd = (ethprice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdf6b0b44f19c9a0aa11d4045db39fe854a4217c08dfd757fd8f298f267b41979\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052670de0b6b3a76400006000553480156200001d57600080fd5b506040516200131e3803806200131e8339818101604052810190620000439190620000d9565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015e565b600081519050620000d38162000144565b92915050565b600060208284031215620000f257620000f16200013f565b5b60006200010284828501620000c2565b91505092915050565b600062000118826200011f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014f816200010b565b81146200015b57600080fd5b50565b60805160601c6111936200018b6000396000818161039d015281816105c3015261062a01526111936000f3fe60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461013b578063b60d428814610166578063be2693f014610170578063d045d6511461017a578063dc992aa0146101b757610099565b80630ec3b0271461009e5780633a7b6c74146100c95780633ccfd60b14610106578063893d20e81461011057610099565b36610099576100976101e2565b005b600080fd5b3480156100aa57600080fd5b506100b3610316565b6040516100c09190610c86565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610b18565b61033c565b6040516100fd9190610c6b565b60405180910390f35b61010e610384565b005b34801561011c57600080fd5b506101256105bf565b6040516101329190610c6b565b60405180910390f35b34801561014757600080fd5b506101506105e7565b60405161015d9190610c86565b60405180910390f35b61016e6101e2565b005b610178610611565b005b34801561018657600080fd5b506101a1600480360381019061019c9190610aeb565b6108b0565b6040516101ae9190610ce1565b60405180910390f35b3480156101c357600080fd5b506101cc6108f9565b6040516101d99190610ce1565b60405180910390f35b60005461021a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ff90919063ffffffff16565b101561025b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025290610ca1565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461030d9190610d18565b92505081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001828154811061035257610351611049565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610409576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104af576000600260006001848154811061043357610432611049565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806104a790610fa2565b91505061040c565b50600067ffffffffffffffff8111156104cb576104ca611078565b5b6040519080825280602002602001820160405280156104f95781602001602082028036833780820191505090505b506001908051906020019061050f9291906109db565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053690610c56565b60006040518083038185875af1925050503d8060008114610573576040519150601f19603f3d011682016040523d82523d6000602084013e610578565b606091505b50509050806105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390610cc1565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610696576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561071a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d0575b5050505050905060005b815181101561079f5760006002600084848151811061074657610745611049565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061079790610fa2565b915050610724565b50600067ffffffffffffffff8111156107bb576107ba611078565b5b6040519080825280602002602001820160405280156107e95781602001602082028036833780820191505090505b50600190805190602001906107ff9291906109db565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161082690610c56565b60006040518083038185875af1925050503d8060008114610863576040519150601f19603f3d011682016040523d82523d6000602084013e610868565b606091505b50509050806108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390610cc1565b60405180910390fd5b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005481565b60008061090b8361093b565b90506000670de0b6b3a764000085836109249190610eb6565b61092e9190610d6e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098457600080fd5b505afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190610b45565b5050509150506402540be400816109d39190610d9f565b915050919050565b828054828255906000526020600020908101928215610a54579160200282015b82811115610a535782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109fb565b5b509050610a619190610a65565b5090565b5b80821115610a7e576000816000905550600101610a66565b5090565b600081359050610a9181611101565b92915050565b600081519050610aa681611118565b92915050565b600081359050610abb8161112f565b92915050565b600081519050610ad08161112f565b92915050565b600081519050610ae581611146565b92915050565b600060208284031215610b0157610b006110a7565b5b6000610b0f84828501610a82565b91505092915050565b600060208284031215610b2e57610b2d6110a7565b5b6000610b3c84828501610aac565b91505092915050565b600080600080600060a08688031215610b6157610b606110a7565b5b6000610b6f88828901610ad6565b9550506020610b8088828901610a97565b9450506040610b9188828901610ac1565b9350506060610ba288828901610ac1565b9250506080610bb388828901610ad6565b9150509295509295909350565b610bc981610f10565b82525050565b610bd881610f6c565b82525050565b6000610beb601283610d07565b9150610bf6826110ac565b602082019050919050565b6000610c0e600b83610d07565b9150610c19826110d5565b602082019050919050565b6000610c31600083610cfc565b9150610c3c826110fe565b600082019050919050565b610c5081610f4c565b82525050565b6000610c6182610c24565b9150819050919050565b6000602082019050610c806000830184610bc0565b92915050565b6000602082019050610c9b6000830184610bcf565b92915050565b60006020820190508181036000830152610cba81610bde565b9050919050565b60006020820190508181036000830152610cda81610c01565b9050919050565b6000602082019050610cf66000830184610c47565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d2382610f4c565b9150610d2e83610f4c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6357610d62610feb565b5b828201905092915050565b6000610d7982610f4c565b9150610d8483610f4c565b925082610d9457610d9361101a565b5b828204905092915050565b6000610daa82610f22565b9150610db583610f22565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610df457610df3610feb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3157610e30610feb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6e57610e6d610feb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eab57610eaa610feb565b5b828202905092915050565b6000610ec182610f4c565b9150610ecc83610f4c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0557610f04610feb565b5b828202905092915050565b6000610f1b82610f2c565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f7782610f7e565b9050919050565b6000610f8982610f90565b9050919050565b6000610f9b82610f2c565b9050919050565b6000610fad82610f4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fe057610fdf610feb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b61110a81610f10565b811461111557600080fd5b50565b61112181610f22565b811461112c57600080fd5b50565b61113881610f4c565b811461114357600080fd5b50565b61114f81610f56565b811461115a57600080fd5b5056fea2646970667358221220d26adfc2d8150a9fa56e07315d134bef712559f9f929951d4bbf8775c1dc3be764736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461013b578063b60d428814610166578063be2693f014610170578063d045d6511461017a578063dc992aa0146101b757610099565b80630ec3b0271461009e5780633a7b6c74146100c95780633ccfd60b14610106578063893d20e81461011057610099565b36610099576100976101e2565b005b600080fd5b3480156100aa57600080fd5b506100b3610316565b6040516100c09190610c86565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb9190610b18565b61033c565b6040516100fd9190610c6b565b60405180910390f35b61010e610384565b005b34801561011c57600080fd5b506101256105bf565b6040516101329190610c6b565b60405180910390f35b34801561014757600080fd5b506101506105e7565b60405161015d9190610c86565b60405180910390f35b61016e6101e2565b005b610178610611565b005b34801561018657600080fd5b506101a1600480360381019061019c9190610aeb565b6108b0565b6040516101ae9190610ce1565b60405180910390f35b3480156101c357600080fd5b506101cc6108f9565b6040516101d99190610ce1565b60405180910390f35b60005461021a600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108ff90919063ffffffff16565b101561025b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025290610ca1565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461030d9190610d18565b92505081905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001828154811061035257610351611049565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610409576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104af576000600260006001848154811061043357610432611049565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806104a790610fa2565b91505061040c565b50600067ffffffffffffffff8111156104cb576104ca611078565b5b6040519080825280602002602001820160405280156104f95781602001602082028036833780820191505090505b506001908051906020019061050f9291906109db565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053690610c56565b60006040518083038185875af1925050503d8060008114610573576040519150601f19603f3d011682016040523d82523d6000602084013e610578565b606091505b50509050806105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390610cc1565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610696576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561071a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d0575b5050505050905060005b815181101561079f5760006002600084848151811061074657610745611049565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061079790610fa2565b915050610724565b50600067ffffffffffffffff8111156107bb576107ba611078565b5b6040519080825280602002602001820160405280156107e95781602001602082028036833780820191505090505b50600190805190602001906107ff9291906109db565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161082690610c56565b60006040518083038185875af1925050503d8060008114610863576040519150601f19603f3d011682016040523d82523d6000602084013e610868565b606091505b50509050806108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390610cc1565b60405180910390fd5b5050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60005481565b60008061090b8361093b565b90506000670de0b6b3a764000085836109249190610eb6565b61092e9190610d6e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098457600080fd5b505afa158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc9190610b45565b5050509150506402540be400816109d39190610d9f565b915050919050565b828054828255906000526020600020908101928215610a54579160200282015b82811115610a535782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109fb565b5b509050610a619190610a65565b5090565b5b80821115610a7e576000816000905550600101610a66565b5090565b600081359050610a9181611101565b92915050565b600081519050610aa681611118565b92915050565b600081359050610abb8161112f565b92915050565b600081519050610ad08161112f565b92915050565b600081519050610ae581611146565b92915050565b600060208284031215610b0157610b006110a7565b5b6000610b0f84828501610a82565b91505092915050565b600060208284031215610b2e57610b2d6110a7565b5b6000610b3c84828501610aac565b91505092915050565b600080600080600060a08688031215610b6157610b606110a7565b5b6000610b6f88828901610ad6565b9550506020610b8088828901610a97565b9450506040610b9188828901610ac1565b9350506060610ba288828901610ac1565b9250506080610bb388828901610ad6565b9150509295509295909350565b610bc981610f10565b82525050565b610bd881610f6c565b82525050565b6000610beb601283610d07565b9150610bf6826110ac565b602082019050919050565b6000610c0e600b83610d07565b9150610c19826110d5565b602082019050919050565b6000610c31600083610cfc565b9150610c3c826110fe565b600082019050919050565b610c5081610f4c565b82525050565b6000610c6182610c24565b9150819050919050565b6000602082019050610c806000830184610bc0565b92915050565b6000602082019050610c9b6000830184610bcf565b92915050565b60006020820190508181036000830152610cba81610bde565b9050919050565b60006020820190508181036000830152610cda81610c01565b9050919050565b6000602082019050610cf66000830184610c47565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d2382610f4c565b9150610d2e83610f4c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6357610d62610feb565b5b828201905092915050565b6000610d7982610f4c565b9150610d8483610f4c565b925082610d9457610d9361101a565b5b828204905092915050565b6000610daa82610f22565b9150610db583610f22565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610df457610df3610feb565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3157610e30610feb565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e6e57610e6d610feb565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eab57610eaa610feb565b5b828202905092915050565b6000610ec182610f4c565b9150610ecc83610f4c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0557610f04610feb565b5b828202905092915050565b6000610f1b82610f2c565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f7782610f7e565b9050919050565b6000610f8982610f90565b9050919050565b6000610f9b82610f2c565b9050919050565b6000610fad82610f4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fe057610fdf610feb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b61110a81610f10565b811461111557600080fd5b50565b61112181610f22565b811461112c57600080fd5b50565b61113881610f4c565b811461114357600080fd5b50565b61114f81610f56565b811461115a57600080fd5b5056fea2646970667358221220d26adfc2d8150a9fa56e07315d134bef712559f9f929951d4bbf8775c1dc3be764736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor receive fallback external public internal private view / pure"
      },
      "fund()": {
        "notice": "Fund the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "minUSD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 61,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_fundersToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}