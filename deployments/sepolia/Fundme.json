{
  "address": "0x4712E2B1Fb15a16EbFD1F0b3f479d14b93C335d8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "fundersToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdfecdc9a645559d132c569ec3df931f13f5876373cd5ee65c092b9cb1fa2a1a6",
  "receipt": {
    "to": null,
    "from": "0xC7Eada0ABEa2c3032B1a1510F8f4be4C87A7e78c",
    "contractAddress": "0x4712E2B1Fb15a16EbFD1F0b3f479d14b93C335d8",
    "transactionIndex": 104,
    "gasUsed": "915870",
    "logsBloom": "0x
    "blockHash": "0xc1e88d5c690486583a868e47ad1c34f2e039ac72d50d141eeaa7ea69951ffae3",
    "transactionHash": "0xdfecdc9a645559d132c569ec3df931f13f5876373cd5ee65c092b9cb1fa2a1a6",
    "logs": [],
    "blockNumber": 7645816,
    "cumulativeGasUsed": "16689789",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "be8f20a7a57e1295d0a5929e2126f305",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"fundersToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor receive fallback external public internal private view / pure\"},\"fund()\":{\"notice\":\"Fund the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"Fundme\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// praga\\npragma solidity ^0.8.7;\\n\\n// import\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// // custom error\\nerror notOwner();\\n\\n// interfaces, libraries, contracts\\n\\n// @title A contract for crowd funding\\n// @author J\\n// @notice This contract is to demo a sample funding contract\\n// @dev This implements price fees as our library\\ncontract Fundme {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables\\n    uint256 public minUSD = 1 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public fundersToAmountFunded;\\n\\n    // immutable and constant\\n    // constant can only be assigned when initializing\\n    // immutable can only be assigned onece\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    // Modifiers\\n    // _; represents implement the rest code\\n    modifier isOwner() {\\n        require(i_owner == msg.sender, \\\"Sender is not the owner\\\");\\n        // if(i_owner != msg.sender) {revert notOwner();}\\n        _;\\n    }\\n\\n    // Functions Orders:\\n    /// constructor\\n    /// receive\\n    /// fallback\\n    /// external\\n    /// public\\n    /// internal\\n    /// private\\n    /// view / pure\\n\\n    //constructer will be called once the contract is on the chain\\n    //it's a good way to pick the owner\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice Fund the contract\\n     * @dev This implements price feeds as our library\\n     */\\n    // msg value is returned in WEI 10**18\\n    function fund() public payable {\\n        // PriceConverter.getConversionRate(msg.value);\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minUSD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        fundersToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public isOwner {\\n        // notice: it is not convenient to check in every function, so we introduce modifier\\n        // require(i_owner == msg.sender, \\\"Sender is not the owner\\\");\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            fundersToAmountFunded[funders[funderIndex]] = 0;\\n        }\\n\\n        //reset the array, 0 represents 0 element\\n        funders = new address[](0);\\n\\n        // only payable address can use transfer\\n        // \\\"this\\\" means the whole contract\\n        // (bool callSuccess, bytes memory data) is the return of call\\n        // how is \\\"call\\\" used call{}()????\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xc9b8fcbf1426b252ba9f60e4a4fe908026d9a083892168d1c6e5ea6827e4f70e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        // Sepolia Testnet\\r\\n        // 0x694AA1769357215DE4FAC081bf1f309aDC325306 ETH/USD\\r\\n\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        // answer * 10 ** 10, according to decimals = 8\\r\\n        return uint256(price * 1e10);\\r\\n        // ETH/USD in WEI\\r\\n    }\\r\\n\\r\\n    // function getVersion() internal view returns (uint256) {\\r\\n    //     return\\r\\n    //         AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306)\\r\\n    //             .version();\\r\\n    // }\\r\\n\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethprice = getPrice(priceFeed);\\r\\n        // ethprice and ethAmound have 18decimals, so we need to divide one\\r\\n        uint256 ethAmountInUsd = (ethprice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xdf6b0b44f19c9a0aa11d4045db39fe854a4217c08dfd757fd8f298f267b41979\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052670de0b6b3a764000060005534801561001c57600080fd5b506040516200103c3803806200103c833981810160405281019061004091906100d3565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014e565b6000815190506100cd81610137565b92915050565b6000602082840312156100e9576100e8610132565b5b60006100f7848285016100be565b91505092915050565b600061010b82610112565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61014081610100565b811461014b57600080fd5b50565b60805160601c610ec8620001746000396000818161030e01526105610152610ec86000f3fe6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d42881461010c578063dba6335f14610116578063dc0d3dff14610141578063dc992aa01461017e57610083565b8063144d16b51461008d5780633ccfd60b146100ca578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107b4565b6102dd565b6040516100c191906109ed565b60405180910390f35b3480156100d657600080fd5b506100df6102f5565b005b3480156100ed57600080fd5b506100f6610539565b6040516101039190610972565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b61055f565b6040516101389190610957565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906107e1565b610583565b6040516101759190610957565b60405180910390f35b34801561018a57600080fd5b506101936105c2565b6040516101a091906109ed565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c890919063ffffffff16565b1015610222576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102199061098d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d49190610a24565b92505081905550565b60026020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a906109cd565b60405180910390fd5b60005b60018054905081101561042957600060026000600184815481106103ad576103ac610d55565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061042190610cae565b915050610386565b50600067ffffffffffffffff81111561044557610444610d84565b5b6040519080825280602002602001820160405280156104735781602001602082028036833780820191505090505b50600190805190602001906104899291906106a4565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b090610942565b60006040518083038185875af1925050503d80600081146104ed576040519150601f19603f3d011682016040523d82523d6000602084013e6104f2565b606091505b5050905080610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d906109ad565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b6000806105d483610604565b90506000670de0b6b3a764000085836105ed9190610bc2565b6105f79190610a7a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610685919061080e565b5050509150506402540be4008161069c9190610aab565b915050919050565b82805482825590600052602060002090810192821561071d579160200282015b8281111561071c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c4565b5b50905061072a919061072e565b5090565b5b8082111561074757600081600090555060010161072f565b5090565b60008135905061075a81610e36565b92915050565b60008151905061076f81610e4d565b92915050565b60008135905061078481610e64565b92915050565b60008151905061079981610e64565b92915050565b6000815190506107ae81610e7b565b92915050565b6000602082840312156107ca576107c9610db3565b5b60006107d88482850161074b565b91505092915050565b6000602082840312156107f7576107f6610db3565b5b600061080584828501610775565b91505092915050565b600080600080600060a0868803121561082a57610829610db3565b5b60006108388882890161079f565b955050602061084988828901610760565b945050604061085a8882890161078a565b935050606061086b8882890161078a565b925050608061087c8882890161079f565b9150509295509295909350565b61089281610c1c565b82525050565b6108a181610c78565b82525050565b60006108b4601283610a13565b91506108bf82610db8565b602082019050919050565b60006108d7600b83610a13565b91506108e282610de1565b602082019050919050565b60006108fa601783610a13565b915061090582610e0a565b602082019050919050565b600061091d600083610a08565b915061092882610e33565b600082019050919050565b61093c81610c58565b82525050565b600061094d82610910565b9150819050919050565b600060208201905061096c6000830184610889565b92915050565b60006020820190506109876000830184610898565b92915050565b600060208201905081810360008301526109a6816108a7565b9050919050565b600060208201905081810360008301526109c6816108ca565b9050919050565b600060208201905081810360008301526109e6816108ed565b9050919050565b6000602082019050610a026000830184610933565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a2f82610c58565b9150610a3a83610c58565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a6f57610a6e610cf7565b5b828201905092915050565b6000610a8582610c58565b9150610a9083610c58565b925082610aa057610a9f610d26565b5b828204905092915050565b6000610ab682610c2e565b9150610ac183610c2e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0057610aff610cf7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b3d57610b3c610cf7565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b7a57610b79610cf7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bb757610bb6610cf7565b5b828202905092915050565b6000610bcd82610c58565b9150610bd883610c58565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1157610c10610cf7565b5b828202905092915050565b6000610c2782610c38565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8382610c8a565b9050919050565b6000610c9582610c9c565b9050919050565b6000610ca782610c38565b9050919050565b6000610cb982610c58565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cec57610ceb610cf7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f53656e646572206973206e6f7420746865206f776e6572000000000000000000600082015250565b50565b610e3f81610c1c565b8114610e4a57600080fd5b50565b610e5681610c2e565b8114610e6157600080fd5b50565b610e6d81610c58565b8114610e7857600080fd5b50565b610e8481610c62565b8114610e8f57600080fd5b5056fea26469706673582212209e5183e5de8ee7c5c470655ff8b709477e017989357c3bdb160b9937f55eb7ce64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d42881461010c578063dba6335f14610116578063dc0d3dff14610141578063dc992aa01461017e57610083565b8063144d16b51461008d5780633ccfd60b146100ca578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107b4565b6102dd565b6040516100c191906109ed565b60405180910390f35b3480156100d657600080fd5b506100df6102f5565b005b3480156100ed57600080fd5b506100f6610539565b6040516101039190610972565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b61055f565b6040516101389190610957565b60405180910390f35b34801561014d57600080fd5b50610168600480360381019061016391906107e1565b610583565b6040516101759190610957565b60405180910390f35b34801561018a57600080fd5b506101936105c2565b6040516101a091906109ed565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c890919063ffffffff16565b1015610222576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102199061098d565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d49190610a24565b92505081905550565b60026020528060005260406000206000915090505481565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a906109cd565b60405180910390fd5b60005b60018054905081101561042957600060026000600184815481106103ad576103ac610d55565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061042190610cae565b915050610386565b50600067ffffffffffffffff81111561044557610444610d84565b5b6040519080825280602002602001820160405280156104735781602001602082028036833780820191505090505b50600190805190602001906104899291906106a4565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b090610942565b60006040518083038185875af1925050503d80600081146104ed576040519150601f19603f3d011682016040523d82523d6000602084013e6104f2565b606091505b5050905080610536576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052d906109ad565b60405180910390fd5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061059357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b6000806105d483610604565b90506000670de0b6b3a764000085836105ed9190610bc2565b6105f79190610a7a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064d57600080fd5b505afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610685919061080e565b5050509150506402540be4008161069c9190610aab565b915050919050565b82805482825590600052602060002090810192821561071d579160200282015b8281111561071c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c4565b5b50905061072a919061072e565b5090565b5b8082111561074757600081600090555060010161072f565b5090565b60008135905061075a81610e36565b92915050565b60008151905061076f81610e4d565b92915050565b60008135905061078481610e64565b92915050565b60008151905061079981610e64565b92915050565b6000815190506107ae81610e7b565b92915050565b6000602082840312156107ca576107c9610db3565b5b60006107d88482850161074b565b91505092915050565b6000602082840312156107f7576107f6610db3565b5b600061080584828501610775565b91505092915050565b600080600080600060a0868803121561082a57610829610db3565b5b60006108388882890161079f565b955050602061084988828901610760565b945050604061085a8882890161078a565b935050606061086b8882890161078a565b925050608061087c8882890161079f565b9150509295509295909350565b61089281610c1c565b82525050565b6108a181610c78565b82525050565b60006108b4601283610a13565b91506108bf82610db8565b602082019050919050565b60006108d7600b83610a13565b91506108e282610de1565b602082019050919050565b60006108fa601783610a13565b915061090582610e0a565b602082019050919050565b600061091d600083610a08565b915061092882610e33565b600082019050919050565b61093c81610c58565b82525050565b600061094d82610910565b9150819050919050565b600060208201905061096c6000830184610889565b92915050565b60006020820190506109876000830184610898565b92915050565b600060208201905081810360008301526109a6816108a7565b9050919050565b600060208201905081810360008301526109c6816108ca565b9050919050565b600060208201905081810360008301526109e6816108ed565b9050919050565b6000602082019050610a026000830184610933565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a2f82610c58565b9150610a3a83610c58565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a6f57610a6e610cf7565b5b828201905092915050565b6000610a8582610c58565b9150610a9083610c58565b925082610aa057610a9f610d26565b5b828204905092915050565b6000610ab682610c2e565b9150610ac183610c2e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0057610aff610cf7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b3d57610b3c610cf7565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b7a57610b79610cf7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bb757610bb6610cf7565b5b828202905092915050565b6000610bcd82610c58565b9150610bd883610c58565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1157610c10610cf7565b5b828202905092915050565b6000610c2782610c38565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8382610c8a565b9050919050565b6000610c9582610c9c565b9050919050565b6000610ca782610c38565b9050919050565b6000610cb982610c58565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cec57610ceb610cf7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f53656e646572206973206e6f7420746865206f776e6572000000000000000000600082015250565b50565b610e3f81610c1c565b8114610e4a57600080fd5b50565b610e5681610c2e565b8114610e6157600080fd5b50565b610e6d81610c58565b8114610e7857600080fd5b50565b610e8481610c62565b8114610e8f57600080fd5b5056fea26469706673582212209e5183e5de8ee7c5c470655ff8b709477e017989357c3bdb160b9937f55eb7ce64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "constructor receive fallback external public internal private view / pure"
      },
      "fund()": {
        "notice": "Fund the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "minUSD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 61,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "fundersToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}